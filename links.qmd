# Links

```{r setup}
#| code-fold: true
library(ggalign)
```

`ggalign` provides a linking mechanism that allows you to select observations and either:

- annotate them with additional plots, or

- visually connect them using lines, polygons, or other elements.

The `pair_links()` function is used to define pairs of connected observations.
In the formula, the left side (before the `~`) represents `hand1`—the
observations on the left (for a horizontal stack layout) or top (for a vertical
stack layout). The right side (after the `~`) represents `hand2`—the observations
on the right (for horizontal stack) or bottom (for vertical stack).

These defined pairs will either be linked together, or each group in the pair
will be linked separately within the same plot area.

Both sides of the formula can be specified using integer or character indices of
the original data (before reordering).
```{r}
pair_links(1:2 ~ c("c", "d"), c("a", "b") ~ 3:4)
```

The print method showed various informations:

  - The object class and the number of paired groups.
  - The specific groups in each pair.
  - The total number of groups (rather than the number of paired groups). For
  example, in this case, there are 4 groups in total since each pair consists of 2
  groups.

If only the left-hand side of the formula exists, you can input it directly.
```{r}
pair_links(1:2, c("a", "b"))
```

To specify links in the right only, you must use formula:
```{r}
pair_links(~ 1:2, ~ c("a", "b"))
```

For integer indices, wrap them with `I()` to follow ordering from the layout.

```{r}
pair_links(I(1:2))
```

You can wrap the whole formula.
```{r}
pair_links(I(1:2 ~ 3:4))
```

## range_link()
`range_link()` function can be used to define a range of observations, which
accepts two argument that specify the lower and upper bounds of the range. These
bounds should be defined as a single integer or character.

```{r}
pair_links(range_link(1, "a"))
```

In this case, the left-hand is defined as the range between the `1st` observation
and the observation named `"a"`.

## Using waiver()
You can also use `waiver()` to inherit values from the opposite group. 
```{r}
pair_links(range_link(1, "a") ~ waiver()) # <1>
```

  1. inherit values from the left hand

```{r}
pair_links(waiver() ~ range_link(1, "a")) # <1>
```

  1. inherit values from the right hand

## Combining Components
You can combine any of these into a list.
```{r}
pair_links(list(range_link(1, "a"), waiver()) ~ list(4:5, c("b", "c"))) # <1>
```

In this example, the left side combines the range between the `1st` observation
and "a" with the observations 4 and 5, and the observations "b" and "c".
